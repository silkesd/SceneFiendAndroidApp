package com.silke.sceneFiendAndroidApp;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.auth.AccessToken;
import twitter4j.auth.RequestToken;
import twitter4j.conf.Configuration;
import twitter4j.conf.ConfigurationBuilder;
import android.app.ActionBar;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.StrictMode;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;


public class TwitterLoginActivity extends SceneFiendAndroidAppActivity
{
	
	private int TWITTER_AUTH;
    private Twitter mTwitter;
    private RequestToken mRequestToken;

    private String accessToken;
    private String accessTokenSecret;

    private boolean haveConnectedWifi;
    private boolean haveConnectedMobile;
    private double x;
    Button btnLogin;
    Button tweet;
    public static final String CONSUMER_KEY = "0hNpshvKYcuNMVadMHQA";
	public static final String CONSUMER_SECRET= "cmGBxiMLl3UKH5vUD7ekcjdLrheSFHf0ziKBehxiyQ";
	Status status;
	    
//	private static final String TAG = "Blundell.TwitterLoginActivity";
//	
//	/** Name to store the users access token */
//	private static final String PREF_ACCESS_TOKEN = "accessToken";
//	/** Name to store the users access token secret */
//	private static final String PREF_ACCESS_TOKEN_SECRET = "accessTokenSecret";
//	/** Consumer Key generated when you registered your app at https://dev.twitter.com/apps/ */
//	private static final String CONSUMER_KEY = "0hNpshvKYcuNMVadMHQA";
//	/** Consumer Secret generated when you registered your app at https://dev.twitter.com/apps/  */
//	private static final String CONSUMER_SECRET = "cmGBxiMLl3UKH5vUD7ekcjdLrheSFHf0ziKBehxiyQ"; // XXX Encode in your app
//	/** The url that Twitter will redirect to after a user log's in - this will be picked up by your app manifest and redirected into this activity */
//	private static final String CALLBACK_URL = "tweet-to-twitter-blundell-01-android";
//	private SharedPreferences mPrefs;
//	
//	
//	/** The request token signifies the unique ID of the request you are sending to twitter  */
//	private RequestToken mReqToken;
//	
//	
//	
//	private Button tweet;
	
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.twitter_login);
       // TextView tweet = (TextView) findViewById(R.id.tweet);
        
        if (android.os.Build.VERSION.SDK_INT > 9) 
        {
            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
            StrictMode.setThreadPolicy(policy);
          }
        
		//actionbar
		ActionBar ab = getActionBar();
		ab.setDisplayHomeAsUpEnabled(true);
		
		//accesstokens generated byu twitter (should be stored in another file and called)
        accessToken = "620368077-bzqQjCpDB1KeRku0JsiAfysG1yPlVJfwOAmkrdhp";
       
        accessTokenSecret = "bJQDxkx2hPnMQIlc6ebjzjyPar6QwpRX6KyVFnPo";
       
        //CHANGED FROM BTWEET BUTTON
        Button btnLogin = (Button) findViewById(R.id.btnLogin);
        btnLogin.setOnClickListener(new OnClickListener() 
        {
        	 public void onClick(View v) 
        	 {
                 // TODO Auto-generated method stub
                 updateStatus();
             }
        }); 
        
        Button tweet = (Button) findViewById(R.id.tweet);
        tweet.setOnClickListener(new OnClickListener()
        {
        	public void onClick(View v) 
       	 {
                // TODO Auto-generated method stub
        		tweetMessage();
            }
        });
	}

	private boolean haveNetworkConnection() 
	{
	    haveConnectedWifi = false;
	    haveConnectedMobile = false;
	
	    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
	    NetworkInfo[] netInfo = cm.getAllNetworkInfo();
	    for (NetworkInfo ni : netInfo) 
	    {
	        if (ni.getTypeName().equalsIgnoreCase("WIFI"))
	            if (ni.isConnected())
	                haveConnectedWifi = true;
	        if (ni.getTypeName().equalsIgnoreCase("MOBILE"))
	            if (ni.isConnected())
	                haveConnectedMobile = true;
	    }
	    return haveConnectedWifi || haveConnectedMobile;
	}
	
	@Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) 
	{
        // TODO Auto-generated method stub

        if (requestCode == TWITTER_AUTH)
        {

            if (resultCode == Activity.RESULT_OK)
            {
                Toast.makeText(this, "Hey Ho", 300).show();
                String oauthVerifier = (String) data.getExtras().get("oauth_verifier");

                AccessToken at = null;

                try
                {
                    // Pair up our request with the response
                    at = mTwitter.getOAuthAccessToken(oauthVerifier);
                    String theToken = at.getToken();
                    // Toast.makeText(this, theToken, 10000).show();
                    String theTokenSecret = at.getTokenSecret();
                    // Toast.makeText(this, theTokenSecret, 10000).show();
                    SharedPreferences settings = PreferenceManager.getDefaultSharedPreferences(this);
                    settings = PreferenceManager.getDefaultSharedPreferences(this);
                    SharedPreferences.Editor editor = settings.edit();
                    editor.putString("twitter_access_token",theToken);
                    editor.putString("twitter_access_token_secret", theTokenSecret);
                    editor.commit();

                    GAME_PREFERENCES_TWITTER_LOGGED_IN = true;
                    updateStatus();
                }
                catch (TwitterException e)
                {
                    e.printStackTrace();
                }
            }
        }
        else
        {
            Toast.makeText(this, "uh oh, Spaghetti Os", 300).show();
        
        }

    }
    private void updateStatus() 
    {
        // TODO Auto-generated method stub
        
        accessToken = "620368077-bzqQjCpDB1KeRku0JsiAfysG1yPlVJfwOAmkrdhp";
        accessTokenSecret = "bJQDxkx2hPnMQIlc6ebjzjyPar6QwpRX6KyVFnPo";
        Toast.makeText(this, "Your tweet has been sent!", 10000).show();
        //Toast.makeText(this, accessTokenSecret, 10000).show();
        haveNetworkConnection();
        if ((haveConnectedWifi == true)|| (haveConnectedMobile == true))
        {
            ConfigurationBuilder builder = new ConfigurationBuilder();
            builder.setOAuthConsumerKey(CONSUMER_KEY);
            builder.setOAuthConsumerSecret(CONSUMER_SECRET);
            builder.setOAuthAccessToken(accessToken);
            builder.setOAuthAccessTokenSecret(accessTokenSecret);
            Configuration conf = builder.build();
            Twitter t = new TwitterFactory(conf).getInstance();

            try 
            {
                t.updateStatus( GAME_PREFERENCES_PLAYER_NAME + " just scored " + GAME_PREFERENCES_PLAYER_SCORE + " on SceneFiend - the fiednishly good trivia game for film fanatics!");
                GAME_PREFERENCES_TWITTER_LOGGED_IN = true;
            }
            catch (TwitterException e) 
            {
                e.printStackTrace();
            }
        }
        else
        {
            Toast.makeText(this, "No access to Internet..please try again", 3000).show();
        }
    }
    @Override
    protected void onResume() 
    {
        // TODO Auto-generated method stub
        super.onResume();
        
        accessToken = "620368077-bzqQjCpDB1KeRku0JsiAfysG1yPlVJfwOAmkrdhp";
        accessTokenSecret = "bJQDxkx2hPnMQIlc6ebjzjyPar6QwpRX6KyVFnPo";
        haveNetworkConnection();
        if ((haveConnectedWifi == true)|| (haveConnectedMobile == true))
        {
            // Toast.makeText(this, "Internet is go!", 3000).show();
            // Intent i = new Intent(this, AndroidBasicOAuthActivity.class);
            // startActivity(i);

            if ((accessToken==null)||(accessTokenSecret==null)){
                mTwitter = new TwitterFactory().getInstance();
                mRequestToken = null;
                mTwitter.setOAuthConsumer(CONSUMER_KEY, CONSUMER_SECRET );
                String callbackURL = getResources().getString(R.string.twitter_callback);
                try
                {
                	StrictMode.enableDefaults();
                    mRequestToken = mTwitter.getOAuthRequestToken(callbackURL);
                }
                catch (TwitterException e)
                {
                    e.printStackTrace();
                }
                Intent i = new Intent(this, TwitterWebviewActivity.class);
                i.putExtra("URL", mRequestToken.getAuthenticationURL());
                startActivityForResult(i, TWITTER_AUTH);
            }
            else
            {
                GAME_PREFERENCES_TWITTER_LOGGED_IN = true;
                Toast.makeText(this, "Hello Again..You're logged in", 3000).show();
                // updateStatusLoggedIn();
                enableTweetButton();
            }
        }
        else
        {	
            Toast.makeText(this, "No access to Internet..please try again", 3000).show();
            Intent i = new Intent(this, CheckNetAccess.class);
            startActivity(i);
        }
    }
    
    public boolean onOptionsItemSelected(MenuItem item) 
	{
		switch (item.getItemId())
		{
			case android.R.id.home:
				Intent i = new Intent(getApplicationContext(),
 						LoginActivity.class);
				i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
 				startActivity(i);
 				Log.d("TwitterLoginAct", "activity started");
 				return true;
			default:
				return super.onOptionsItemSelected(item);
		}
	}
    
    private void enableTweetButton() 
	{
	      Log.i("ENABLING TWEET BUTTON STATES", "User logged in - allowing to tweet");
	      //btnLogin.setEnabled(false);
	      //tweet.setEnabled(true);
	}
    
    private void tweetMessage() 
    {
//    	if ((accessToken!=null) && (accessTokenSecret!=null) && (CONSUMER_KEY != null) && (CONSUMER_SECRET!=null) && GAME_PREFERENCES_TWITTER_LOGGED_IN == true)
//    	{
//    		Log.d("TWEET MESSAGE", "NOTHING IS = NULL");
//	    	try 
//	    	{
//	    		Twitter twitter = new TwitterFactory().getInstance();
//	    	    Status status = twitter.updateStatus("I Just Tweeted! :)");
//	    	    System.out.println("Successfully updated the status to [" + status.getText() + "].");
//	    		//mTwitter.updateStatus("Testing TWEET MESSAGE from SceneFiend");
//	  
//	    		Toast.makeText(this, "Tweet Successful!", Toast.LENGTH_SHORT).show();
//	    	} 
//	    	catch (TwitterException e) 
//	    	{
//	    		Toast.makeText(this, "Tweet error, try again later", Toast.LENGTH_SHORT).show();
//	    	}
//    	}
    	updateStatus();
    }
    
//    private void updateStatusTweet()
//    {
//    	final SharedPreferences settings = PreferenceManager.getDefaultSharedPreferences(this);
//        accessToken = settings.getString( "twitter_access_token", null );
//        accessTokenSecret = settings.getString( "twitter_access_token_secret", null );
//        // Toast.makeText(this, accessToken, 10000).show();
//        // Toast.makeText(this, accessTokenSecret, 10000).show();
//        haveNetworkConnection();
//        if ((haveConnectedWifi == true)|| (haveConnectedMobile == true))
//        {
//        	Log.d("NEARLY IN THE ASYNCTASK", "ABOUT TO MOVE TO BG");
//			class tweetStatus extends AsyncTask<String, String, Object> 
//			{
//				
//				@Override
//				protected Object doInBackground(String... params) 
//				{
//					Log.d("IN THE BG", "IN BG");
//					ConfigurationBuilder builder = new ConfigurationBuilder();
//		            builder.setDebugEnabled(true)
//		            .setOAuthConsumerKey(CONSUMER_KEY)
//		            .setOAuthConsumerSecret(CONSUMER_SECRET)
//		            .setOAuthAccessToken(accessToken)
//		            .setOAuthAccessTokenSecret(accessTokenSecret);
//		            
//		            Configuration building = builder.build(); 
//
//	            
//	            	TwitterFactory factory = new TwitterFactory(building);
//	            	Twitter t = factory.getInstance();
//	            	
//	            	
//	            	
//	            	accessToken = settings.getString( "twitter_access_token", null);
//	                accessTokenSecret = settings.getString( "twitter_access_token_secret", null );
//	                AccessToken accessToken1 = new AccessToken(accessToken, accessTokenSecret);
//	                
//	                try {
//						accessToken1 = t.getOAuthAccessToken();
//					} catch (TwitterException e) {
//						// TODO Auto-generated catch block
//						e.printStackTrace();
//					}
// 
//					try {
//						status = t.updateStatus("TESTING");
//					} catch (TwitterException e) {
//						// TODO Auto-generated catch block
//						e.printStackTrace();
//					}
//	                Log.d("IT WORKED!", "TWITTER THAT IS");
//	                if (status.getId() == 0)
//	                {
//	                	Log.d("NOPE", "TWITTER DIDN'T GET THAT");
//	                }
//					
//					return null;
//				}
//			}
//		}
//        else
//        {
//            Toast.makeText(this, "No access to Internet..please try again", 3000).show();
//        }
//        
//    }    
}       

        


